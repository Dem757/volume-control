<Window x:Name="lnotifWindow"
        x:Class="VolumeControl.ListNotification"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:sys="clr-namespace:System.Windows;assembly=PresentationFramework"
        xmlns:conv="clr-namespace:VolumeControl.WPF.Converters;assembly=VolumeControl.WPF"
        xmlns:coreEnum="clr-namespace:VolumeControl.Core.Enum;assembly=VolumeControl.Core"
        xmlns:helpers="clr-namespace:VolumeControl.Helpers"
        d:DataContext="{d:DesignInstance Type=helpers:VolumeControlSettings}"
        mc:Ignorable="d"
        Title="ListNotification"
        SizeToContent="WidthAndHeight"
        Topmost="True"
        ShowInTaskbar="False"
        WindowStyle="None"
        WindowStartupLocation="Manual"
        SizeChanged="Window_SizeChanged"
        DataContext="{RelativeSource Self}"
        Closing="Window_Closing"
        Unloaded="Window_Unloaded"
        ResizeMode="NoResize"
        Focusable="False"
        ShowActivated="False"
        AllowsTransparency="True">
    <Window.Style>
        <Style TargetType="Window">
            <Setter Property="Background">
                <Setter.Value>
                    <RadialGradientBrush SpreadMethod="Reflect" Opacity="0.5">
                        <GradientStop Offset="0" Color="#303030"/>
                        <GradientStop Offset="0.2" Color="#303035"/>
                        <GradientStop Offset="0.4" Color="#35353A"/>
                        <GradientStop Offset="0.6" Color="#40404E"/>
                    </RadialGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Style>
    <Window.Resources>
        <ResourceDictionary>
            <!-- Border Thickness -->
            <sys:Thickness x:Key="ExteriorBorderThickness">5</sys:Thickness>
            <!-- Unlocked Colors: -->
            <Color x:Key="UnlockedColor">
                #496D49
            </Color>
            <Color x:Key="UnlockedAccentColor">
                #1A721A
            </Color>
            <!-- Locked Colors: -->
            <Color x:Key="LockedColor">
                #A32828
            </Color>
            <Color x:Key="LockedAccentColor">
                #A81414
            </Color>

            <LinearGradientBrush x:Key="UnlockedBrush" StartPoint="0,0" EndPoint="1,1" Opacity="0.95">
                <GradientStop Offset="0.2" Color="{StaticResource UnlockedColor}"/>
                <GradientStop Offset="0.8" Color="{StaticResource UnlockedAccentColor}"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="LockedBrush" StartPoint="0,0" EndPoint="1,1" Opacity="0.95">
                <GradientStop Offset="0.2" Color="{StaticResource LockedColor}"/>
                <GradientStop Offset="0.8" Color="{StaticResource LockedAccentColor}"/>
            </LinearGradientBrush>
            <!--<SolidColorBrush x:Key="UnlockedBrush" Color="#1A721A"/>-->
            <!--<SolidColorBrush x:Key="LockedBrush" Color="#A81414"/>-->

            <Binding x:Key="IsLockedBinding" Path="AudioAPI.LockSelectedSession" Source="{StaticResource Settings}" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged"/>
            <!-- Window Border Style -->
            <Style x:Key="WindowBorderStyle" TargetType="Border">
                <Style.Triggers>
                    <DataTrigger Binding="{StaticResource IsLockedBinding}" Value="False">
                        <Setter Property="BorderBrush" Value="{StaticResource UnlockedBrush}"/>
                    </DataTrigger>
                    <DataTrigger Binding="{StaticResource IsLockedBinding}" Value="True">
                        <Setter Property="BorderBrush" Value="{StaticResource LockedBrush}"/>
                    </DataTrigger>
                </Style.Triggers>
                <Setter Property="BorderThickness" Value="{StaticResource ExteriorBorderThickness}"/>
            </Style>
            <!-- Grid Style -->
            <Style x:Key="InteriorGridStyle" TargetType="Grid">
                <Setter Property="Margin" Value="{StaticResource ExteriorBorderThickness}"/>
            </Style>
            <!-- Section Divider Style -->
            <Style x:Key="DividerStyle" TargetType="Border">
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="BorderBrush" Value="#22FFFFFF"/>
            </Style>
            <!-- TextBlock Style -->
            <Style x:Key="TextBlockStyle" TargetType="TextBlock">
                <Setter Property="Background" Value="#00000000"/>
                <Setter Property="FontFamily" Value="{StaticResource InterFont}"/>
            </Style>



            <!-- Volume Adjustment Panel Style -->
            <Style x:Key="SliderGridStyle" TargetType="Grid">
                <Style.Resources>
                    <ResourceDictionary>
                        <conv:ConverterChain x:Key="VolumeAdjusterVisibilityChainConverter">
                            <conv:NullToBooleanConverter/>
                            <conv:BooleanInverter/>
                            <BooleanToVisibilityConverter/>
                        </conv:ConverterChain>
                    </ResourceDictionary>
                </Style.Resources>
                <Setter Property="Background" Value="#55000000"/>
                <Setter Property="Visibility" Value="{Binding AudioAPI.SelectedSession, Source={StaticResource Settings}, Converter={StaticResource VolumeAdjusterVisibilityChainConverter}}"/>
            </Style>
            <!-- Session Control Panel Slider Style -->
            <Style x:Key="SliderStyle" TargetType="Slider">
                <Setter Property="IsSnapToTickEnabled" Value="True"/>
            </Style>
            <!-- Session Control Panel TextBox Style -->
            <Style x:Key="ValueboxStyle" TargetType="TextBox">
                <Setter Property="Background" Value="#00000000"/>
                <Setter Property="Foreground" Value="WhiteSmoke"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="FontFamily" Value="{StaticResource InterFont}"/>
            </Style>

            <!-- ListViewItem Style -->
            <Style TargetType="{x:Type ListViewItem}">
                <!-- Conditional Style Setters -->
                <Style.Triggers>
                    <!-- Locked: -->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                            <Condition Binding="{Binding AudioAPI.LockSelectedSession, Source={StaticResource Settings}}" Value="True"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="{StaticResource LockedBrush}"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="BorderThickness" Value="0"/>
                    </MultiDataTrigger>
                    <!-- Unlocked: -->
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                            <Condition Binding="{Binding AudioAPI.LockSelectedSession, Source={StaticResource Settings}}" Value="False"/>
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="{StaticResource UnlockedBrush}"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="BorderThickness" Value="0"/>
                    </MultiDataTrigger>
                </Style.Triggers>
                <!-- Global Style Setters -->
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}">
                                <GridViewRowPresenter/>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Session GridView -->
            <GridView x:Key="GridViewAudioAPISessions">
                <!-- Icon Column -->
                <GridViewColumn Width="32">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <Image Visibility="{Binding ShowIcons, Mode=OneWay, Source={StaticResource Settings}, Converter={StaticResource BooleanToVisibilityConverter}}"
                                   Source="{Binding Icon}" Style="{StaticResource IconImageStyle}"/>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
                <!-- ProcessName Column -->
                <GridViewColumn Width="Auto" Header="Process Name">
                    <GridViewColumn.CellTemplate>
                        <DataTemplate>
                            <TextBlock Grid.Column="1"
                                       Text="{Binding ProcessName}"
                                       Style="{StaticResource TextBlockStyle}"/>
                        </DataTemplate>
                    </GridViewColumn.CellTemplate>
                </GridViewColumn>
            </GridView>
            <!-- Devices GridView -->
            <GridView x:Key="GridViewAudioAPIDevices">
                <GridViewColumn>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}" Style="{StaticResource TextBlockStyle}"/>
                    </DataTemplate>
                </GridViewColumn>
            </GridView>

            <!-- ListView Hidden Headers Style -->
            <Style x:Key="{x:Type GridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </Style>
            <!-- ListView Style -->
            <Style x:Key="ListViewStyle" TargetType="ListView">
                <Style.Triggers>
                    <!-- Sessions: -->
                    <DataTrigger Binding="{Binding NotificationMode, Source={StaticResource Settings}}" Value="{x:Static coreEnum:DisplayTarget.Sessions}">
                        <Setter Property="ItemsSource" Value="{Binding AudioAPI.Sessions, Source={StaticResource Settings}, Mode=OneWay}"/>
                        <Setter Property="SelectedItem" Value="{Binding AudioAPI.SelectedSession, Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"/>
                        <Setter Property="View" Value="{StaticResource GridViewAudioAPISessions}"/>
                    </DataTrigger>
                    <!-- Devices: -->
                    <DataTrigger Binding="{Binding NotificationMode, Source={StaticResource Settings}}" Value="{x:Static coreEnum:DisplayTarget.Devices}">
                        <Setter Property="ItemsSource" Value="{Binding AudioAPI.Devices, Source={StaticResource Settings}, Mode=OneWay}"/>
                        <Setter Property="SelectedItem" Value="{Binding AudioAPI.SelectedDevice, Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"/>
                        <Setter Property="View" Value="{StaticResource GridViewAudioAPIDevices}"/>
                    </DataTrigger>
                </Style.Triggers>
                <Setter Property="SelectionMode" Value="Single"/>
                <Setter Property="Background" Value="#00000000"/>
                <Setter Property="Foreground" Value="WhiteSmoke"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Padding" Value="1"/>
            </Style>
            <!--<DataTrigger Binding="{Binding DisplayMode, Source={x:Reference lnotifWindow}}" Value="{x:Static local:ListNotificationDisplayTarget.Sessions}">-->
        </ResourceDictionary>
    </Window.Resources>

    <!-- Outer Layout Grid Control -->
    <Grid>
        <!-- Edge Border Control -->
        <Border x:Name="edgeBorder"
                Style="{StaticResource WindowBorderStyle}"/>
        <!-- Inner Layout Grid Control -->
        <Grid Style="{StaticResource InteriorGridStyle}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="1"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- ListView Row -->
            <ListView x:Name="listView"
                      MouseEnter="ControlMouseEnter"
                      MouseLeave="ControlMouseLeave"/>

            <!-- Divider Border Control -->
            <Border Grid.Row="1" Style="{StaticResource DividerStyle}"/>

            <!-- Slider Row -->
            <Grid x:Name="sliderGrid"
                  Grid.Row="2"                  
                  Style="{StaticResource SliderGridStyle}">
                <!--Visibility="{Binding SliderVisibility, ElementName=lnotifWindow, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"-->
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="26"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <TextBox x:Name="valueBox"
                         Text="{Binding AudioAPI.SelectedSession.Volume, Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                         Style="{StaticResource ValueboxStyle}"
                         VerticalAlignment="Stretch"
                         VerticalContentAlignment="Center"
                         GotKeyboardFocus="ControlGotKeyboardFocus"
                         LostKeyboardFocus="ControlLostKeyboardFocus"/>
                <Slider x:Name="slider"
                        Margin="1"
                        Grid.Column="1"
                        Orientation="Horizontal"
                        Minimum="0"
                        Maximum="100"
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        Value="{Binding AudioAPI.SelectedSession.Volume, Source={StaticResource Settings}, UpdateSourceTrigger=PropertyChanged}"
                        Style="{StaticResource SliderStyle}"
                        Thumb.DragStarted="ControlDragStarted"
                        Thumb.DragCompleted="ControlDragCompleted"/>
            </Grid>

        </Grid>
    </Grid>
</Window>
