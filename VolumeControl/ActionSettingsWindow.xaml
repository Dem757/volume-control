<Window
    x:Class="VolumeControl.ActionSettingsWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:VolumeControl.WPF.Controls;assembly=VolumeControl.WPF"
    xmlns:conv="clr-namespace:VolumeControl.WPF.Converters;assembly=VolumeControl.WPF"
    xmlns:core="clr-namespace:VolumeControl.Core;assembly=VolumeControl.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=netstandard"
    xmlns:wpf="clr-namespace:VolumeControl.WPF;assembly=VolumeControl.WPF"
    xmlns:wpfBehaviors="clr-namespace:VolumeControl.WPF.Behaviors;assembly=VolumeControl.WPF"
    x:Name="Window"
    MinWidth="70"
    d:MinHeight="100"
    Closed="Window_Closed"
    DataContext="{Binding RelativeSource={RelativeSource Self}}"
    FontFamily="{StaticResource InterFont}"
    MouseDown="Window_MouseDown"
    ResizeMode="NoResize"
    ShowActivated="True"
    ShowInTaskbar="False"
    SizeToContent="WidthAndHeight"
    WindowStartupLocation="CenterOwner"
    WindowStyle="None"
    mc:Ignorable="d">
    <Window.InputBindings>
        <KeyBinding Key="Esc" Command="ApplicationCommands.Close" />
    </Window.InputBindings>
    <Window.CommandBindings>
        <CommandBinding Command="ApplicationCommands.Close" Executed="ApplicationCommands_Close_Executed" />
    </Window.CommandBindings>
    <Window.Resources>
        <ResourceDictionary>

            <!--  Constants/Variables  -->
            <sys:Double x:Key="CaptionHeight">22</sys:Double>

            <!--  Converters  -->
            <conv:ConverterChain x:Key="ListToVisibilityConverter">
                <conv:ListHasItemsBooleanConverter />
                <BooleanToVisibilityConverter />
            </conv:ConverterChain>
            <conv:ListHasItemsBooleanConverter x:Key="ListHasItemsBooleanConverter" />

            <!--  Style Providers  -->
            <Style BasedOn="{StaticResource CheckBoxStyle}" TargetType="{x:Type CheckBox}" />

            <DataTemplate x:Key="DataTemplateErrorDataTemplate">
                <TextBlock
                    x:Name="DataTemplateErrorTextBlock"
                    Margin="5,3"
                    VerticalAlignment="Center"
                    Foreground="Red"
                    Loaded="DataTemplateErrorTextBlock_Loaded"
                    Text="{Binding ValueType}"
                    ToolTip="{Tr 'VolumeControl.ActionSettingsWindow.DataTemplateErrorTextBlock.Tooltip',
                                 DefaultText='No DataTemplate is available for this value type!'}"
                    ToolTipService.InitialShowDelay="100" />
            </DataTemplate>
        </ResourceDictionary>
    </Window.Resources>

    <!--  LAYOUT  -->
    <Border BorderBrush="{StaticResource WindowBorderBrush}" BorderThickness="1">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>

            <!--  Caption Bar  -->
            <Grid Height="{StaticResource CaptionHeight}" Background="{StaticResource HeaderBackgroundBrush}">
                <Grid.Resources>
                    <!--  Caption Button Style:  -->
                    <Style TargetType="{x:Type Button}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border
                                        x:Name="ButtonMouseOver"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        RenderOptions.EdgeMode="Aliased"
                                        Style="{StaticResource BorderStyle}">
                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="ButtonMouseOver" Property="Background" Value="#22FFFFFF" />
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="ButtonMouseOver" Property="Background" Value="#44FFFFFF" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
                        <Setter Property="Width" Value="{StaticResource CaptionHeight}" />
                        <Setter Property="Height" Value="{StaticResource CaptionHeight}" />
                        <Setter Property="BorderThickness" Value="0" />
                        <Setter Property="FontWeight" Value="Black" />
                        <Setter Property="Background" Value="#00000000" />
                        <Setter Property="Foreground" Value="LightGray" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="HorizontalContentAlignment" Value="Center" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="IsHitTestVisible" Value="true" />
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>

                <TextBlock
                    Margin="7,0"
                    VerticalAlignment="Center"
                    FontWeight="SemiBold"
                    Foreground="LightGray"
                    Text="{Binding Title, ElementName=Window}" />
                <Button
                    x:Name="CloseWindowButton"
                    Grid.Column="1"
                    HorizontalAlignment="Right"
                    Click="CloseWindowButton_Click"
                    Content="❌"
                    Cursor="Hand"
                    IsTabStop="False" />
            </Grid>

            <!--  Below-Caption Body Area  -->
            <Border Grid.Row="1" Background="{StaticResource TabBackgroundBrush}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <Grid Margin="10,7">
                        <Border x:Name="RoundMask" Style="{StaticResource RoundBorderMaskStyle}" />
                        <controls:DataGridWithoutNavKeys x:Name="SettingsGrid" ItemsSource="{Binding ActionSettings}">
                            <DataGrid.OpacityMask>
                                <VisualBrush Visual="{Binding ElementName=RoundMask}" />
                            </DataGrid.OpacityMask>
                            <DataGrid.Style>
                                <Style TargetType="{x:Type DataGrid}">
                                    <!--  Appearance  -->
                                    <Setter Property="RowBackground" Value="{StaticResource GridRowBrush}" />
                                    <Setter Property="AlternatingRowBackground" Value="{StaticResource GridRowAltBrush}" />
                                    <Setter Property="BorderThickness" Value="0" />
                                    <Setter Property="GridLinesVisibility" Value="None" />
                                    <Setter Property="MinRowHeight" Value="24" />
                                    <!--  Layout  -->
                                    <Setter Property="AutoGenerateColumns" Value="False" />
                                    <Setter Property="HeadersVisibility" Value="None" />
                                    <!--  User Interaction  -->
                                    <Setter Property="CanUserAddRows" Value="False" />
                                    <Setter Property="CanUserDeleteRows" Value="False" />
                                    <Setter Property="CanUserReorderColumns" Value="False" />
                                    <Setter Property="CanUserSortColumns" Value="False" />
                                    <Setter Property="CanUserResizeColumns" Value="True" />
                                    <Setter Property="CanUserResizeRows" Value="False" />
                                    <!--  Selection  -->
                                    <Setter Property="SelectionMode" Value="Single" />
                                    <Setter Property="SelectionUnit" Value="Cell" />
                                    <!--  Templates  -->
                                    <Setter Property="CellStyle">
                                        <Setter.Value>
                                            <Style TargetType="{x:Type DataGridCell}">
                                                <Style.Triggers>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Setter Property="Foreground" Value="WhiteSmoke" />
                                                        <Setter Property="BorderBrush" Value="Transparent" />
                                                    </Trigger>
                                                    <Trigger Property="IsSelected" Value="False">
                                                        <Setter Property="Background" Value="Transparent" />
                                                        <Setter Property="Foreground" Value="WhiteSmoke" />
                                                        <Setter Property="BorderBrush" Value="Transparent" />
                                                    </Trigger>
                                                </Style.Triggers>
                                                <Setter Property="IsTabStop" Value="False" />
                                                <Setter Property="Focusable" Value="False" />
                                                <Setter Property="BorderThickness" Value="0" />
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type DataGridCell}">
                                                            <Border
                                                                Margin="{TemplateBinding Margin}"
                                                                Padding="{TemplateBinding Padding}"
                                                                Background="{TemplateBinding Background}"
                                                                BorderBrush="{TemplateBinding BorderBrush}"
                                                                BorderThickness="{TemplateBinding BorderThickness}">
                                                                <ContentPresenter
                                                                    Content="{TemplateBinding Content}"
                                                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                                                            </Border>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </DataGrid.Style>
                            <DataGrid.Resources>
                                <conv:ConverterChain x:Key="NullToVisibilityConverter">
                                    <conv:NullToBooleanConverter />
                                    <conv:BooleanInverter />
                                    <BooleanToVisibilityConverter />
                                </conv:ConverterChain>
                                <conv:ConverterChain x:Key="InvertedBooleanToVisibilityConverter">
                                    <conv:BooleanInverter />
                                    <BooleanToVisibilityConverter />
                                </conv:ConverterChain>
                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <!--  Name  -->
                                <DataGridTemplateColumn IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Border ToolTip="{Binding Description}">
                                                <TextBlock
                                                    Margin="5,3"
                                                    HorizontalAlignment="Left"
                                                    VerticalAlignment="Center"
                                                    Foreground="{StaticResource TextBoxForeground}"
                                                    Text="{Binding Name}"
                                                    ToolTipService.InitialShowDelay="250" />
                                            </Border>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <!--  Value  -->
                                <DataGridTemplateColumn IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Border ToolTip="{Binding Description}">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="Auto" />
                                                        <ColumnDefinition Width="*" />
                                                    </Grid.ColumnDefinitions>

                                                    <CheckBox
                                                        x:Name="ActionSettingToggleCheckBox"
                                                        Margin="5,3"
                                                        Content="{Tr 'VolumeControl.ActionSettingsWindow.ToggleActionSetting.Content',
                                                                     DefaultText='Enable'}"
                                                        IsChecked="{Binding IsEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                        ToolTip="{Tr 'VolumeControl.ActionSettingsWindow.ToggleActionSetting.Tooltip',
                                                                     DefaultText='This action setting is enabled when checked.'}"
                                                        Visibility="{Binding IsToggleable, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                    <ContentControl
                                                        x:Name="ContentControl"
                                                        Grid.Column="1"
                                                        Margin="5,3"
                                                        Content="{Binding}"
                                                        IsEnabled="{Binding IsEnabled}"
                                                        IsTabStop="False" />
                                                </Grid>
                                            </Border>
                                            <DataTemplate.Triggers>
                                                <!--  Use Provided DataTemplate  -->
                                                <DataTrigger Binding="{Binding ActionSettingDefinition.DataTemplate, Converter={StaticResource IsNullConverter}}" Value="False">
                                                    <Setter TargetName="ContentControl" Property="ContentTemplate" Value="{Binding ActionSettingDefinition.DataTemplate}" />
                                                </DataTrigger>
                                                <!--  Use DataTemplateSelector  -->
                                                <DataTrigger Binding="{Binding ActionSettingDefinition.DataTemplate, Converter={StaticResource IsNullConverter}}" Value="True">
                                                    <Setter TargetName="ContentControl" Property="ContentTemplate" Value="{StaticResource DataTemplateErrorDataTemplate}" />
                                                </DataTrigger>
                                            </DataTemplate.Triggers>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </controls:DataGridWithoutNavKeys>
                    </Grid>

                    <Button
                        x:Name="ResetToDefaultButton"
                        Grid.Row="1"
                        Margin="10,7"
                        Click="ResetToDefaultButton_Click"
                        Content="Reset To Default" />
                </Grid>
            </Border>
        </Grid>
    </Border>

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="0" GlassFrameThickness="1,1,1,0" />
    </WindowChrome.WindowChrome>
</Window>
