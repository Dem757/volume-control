<Window x:Name="window"
        x:Class="VolumeControl.Mixer"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Controls="clr-namespace:VolumeControl.Core.Controls;assembly=VolumeControl.WPF"
        xmlns:core="clr-namespace:VolumeControl.Core;assembly=VolumeControl.Core"
        xmlns:c="clr-namespace:CalcBinding;assembly=CalcBinding"
        mc:Ignorable="d"
        Title="Volume Control"
        Height="94"
        Width="400"
        DataContext="{RelativeSource Self}"
        WindowStyle="SingleBorderWindow"
        SizeToContent="Height" UseLayoutRounding="True" ResizeMode="CanMinimize" Icon="/Properties/Resources/icons/icon-16x16-VC.ico">

    <!--( Static Resources )-->
    <Window.Resources>
        <core:AudioAPI x:Name="audioAPI" x:Key="AudioAPI"/>
        <Style TargetType="CheckBox" x:Key="CheckBoxStyle">
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
    </Window.Resources>

    <!--( Element Layout )-->
    <StackPanel Orientation="Vertical"
                HorizontalAlignment="Center"
                VerticalAlignment="Top"
                UseLayoutRounding="True">

        <!--- [Row-0] Target Selection -->
        <Grid x:Name="targetSelectionRow"
              Height="25"
              HorizontalAlignment="Center"
              Width="{Binding ElementName=window, Path=ActualWidth, BindsDirectlyToSource=True, Mode=OneWay}"
              Margin="3,3,3,0">

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="12"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="6"/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="1"
                    Width="Auto"
                    Content="Set Target"
                    Padding="5,1,5,1"
                    Height="21"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Click="Handle_ApplyClick"
                    IsEnabled="{c:Binding ElementName=cbLockTargetSelection, Path=!IsChecked}"/>
            <TextBox x:Name="targetNameTextBox"
                     Grid.Column="2"
                     TextWrapping="NoWrap"
                     Margin="3,0,3,0"
                     VerticalContentAlignment="Center"
                     VerticalAlignment="Center"
                     HorizontalAlignment="Stretch"
                     Height="21"
                     TabIndex="0"
                     ToolTip="You can enter the Process ID or Process Name of any valid audio session here. Click the 'Set Target' button to apply the changes."
                     Text="{Binding Target, Mode=TwoWay, NotifyOnSourceUpdated=True, UpdateSourceTrigger=Explicit, BindsDirectlyToSource=True, IsAsync=True}"
                     DataContext="{StaticResource AudioAPI}"
                     IsEnabled="{c:Binding ElementName=cbLockTargetSelection, Path=!IsChecked}"/>
            <CheckBox x:Name="cbLockTargetSelection"
                      Grid.Row="0"
                      Grid.Column="3"
                      Content="Lock"
                      Width="52"
                      Height="Auto"
                      ClickMode="Press"
                      VerticalAlignment="Center"
                      HorizontalAlignment="Stretch"
                      TabIndex="1"
                      DataContext="{StaticResource AudioAPI}"
                      IsChecked="{Binding LockSelection, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>

        <!--- [Row-1] Mixer Controls & Misc -->
        <Grid x:Name="mixerControlsRow" 
              Grid.Row="1"
              Height="25"
              Margin="3,-2,3,1"
              VerticalAlignment="Center"
              HorizontalAlignment="Center">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <Button x:Name="bReload"
                    Grid.Column="0"
                    Grid.Row="0"
                    Content="Refresh Sessions"
                    Padding="5,1,5,1"
                    Margin="3,0,3,0"
                    Height="21"
                    Width="Auto"
                    Click="Handle_ReloadClick"
                    TabIndex="2"/>
            <CheckBox x:Name="cbReloadOnHotkey"
                      Grid.Column="1"
                      Grid.Row="0"
                      VerticalAlignment="Center"
                      Content="On Hotkey"
                      Margin="3,0,3,0"
                      IsChecked="{Binding ReloadOnHotkey, BindsDirectlyToSource=True, Mode=TwoWay}"
                      TabIndex="3"
                      ClickMode="Press"
                      Canvas.Left="-5"
                      Canvas.Top="-1"
                      DataContext="{StaticResource AudioAPI}"/>
            <CheckBox x:Name="cbReloadOnInterval"
                      Grid.Column="2"
                      Grid.Row="0"
                      VerticalAlignment="Center"
                      Content="Automatic"
                      IsChecked="{Binding ReloadOnInterval, BindsDirectlyToSource=True, Mode=TwoWay}"
                      TabIndex="4"
                      ClickMode="Press"
                      DataContext="{StaticResource AudioAPI}"/>
            <Controls:NumericUpDown HorizontalAlignment="Left"
                                    Grid.Column="3"
                                    Grid.Row="0"
                                    Height="21"
                                    Width="60"
                                    Margin="3,0,3,0"
                                    ToolTip="Reload Interval in Milliseconds"
                                    TabIndex="5"
                                    MaxDecimalPlaces="0"
                                    IsEnabled="{Binding ElementName=cbReloadOnInterval, Path=IsChecked, UpdateSourceTrigger=PropertyChanged, FallbackValue=3000}"
                                    MinValue="{Binding ReloadIntervalMin}"
                                    MaxValue="{Binding ReloadIntervalMax}"
                                    Value="{Binding ReloadInterval, BindsDirectlyToSource=True, Mode=TwoWay}"
                                    DataContext="{StaticResource AudioAPI}"/>
            <Button Grid.Column="4"
                    Height="21"
                    Content="Hotkeys..."
                    Padding="5,1,5,1"/>
        </Grid>

        <!--- [Row-2] Mixer Data Grid -->
        <Border BorderThickness="1"
                BorderBrush="Black">
            <DataGrid
            x:Name="processDataGrid"
            d:ItemsSource="{Binding Sessions, BindsDirectlyToSource=True, NotifyOnSourceUpdated=True, Mode=TwoWay}"
            Grid.Row="2"
            HeadersVisibility="Column"
            AutoGenerateColumns="False"
            HorizontalScrollBarVisibility="Disabled"
            VerticalScrollBarVisibility="Disabled"
            SelectionMode="Extended"
            SelectionUnit="FullRow"
            BorderThickness="0"
            Background="Transparent"
            DataContext="{StaticResource AudioAPI}">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="PID" Binding="{Binding PID, Mode=OneTime}" IsReadOnly="True"/>
                    <DataGridTextColumn Header="Process Name" Width="*" Binding="{Binding ProcessName, Mode=OneWay}" IsReadOnly="True"/>
                    <DataGridCheckBoxColumn Header="Muted" Width="Auto" Binding="{Binding Muted, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    <DataGridTemplateColumn Header="Volume" Width="*">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Grid VerticalAlignment="Center" Margin="1">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="3"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Slider x:Name="dgVolumeSlider" Grid.Column="0" Minimum="0" Maximum="100" Value="{Binding Volume, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" SmallChange="1" LargeChange="5" VerticalContentAlignment="Center"/>
                                    <TextBox x:Name="dgVolumeTextBox" Grid.Column="2" Text="{Binding Volume, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Background="Transparent" BorderThickness="0" VerticalContentAlignment="Center"/>
                                </Grid>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <!---<DataGridTextColumn Header="" Width="Auto" Binding="{Binding Volume, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>-->
                    <DataGridTemplateColumn Header="" Width="Auto" IsReadOnly="True">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Button Click="Handle_ProcessSelectClick" 
                                    Content="Select"
                                    Padding="3,1,3,1"/>
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                </DataGrid.Columns>
            </DataGrid>
        </Border>

    </StackPanel>
</Window>
