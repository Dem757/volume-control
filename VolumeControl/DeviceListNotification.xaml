<Window
    x:Class="VolumeControl.DeviceListNotification"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviour="clr-namespace:XamlTimers;assembly=XamlTimers"
    xmlns:conv="clr-namespace:VolumeControl.WPF.Converters;assembly=VolumeControl.WPF"
    xmlns:core="clr-namespace:VolumeControl.Core;assembly=VolumeControl.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:VolumeControl"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:VolumeControl.ViewModels"
    xmlns:wpf="clr-namespace:VolumeControl.WPF;assembly=VolumeControl.WPF"
    xmlns:wpfBehaviors="clr-namespace:VolumeControl.WPF.Behaviors;assembly=VolumeControl.WPF"
    x:Name="Window"
    Title="DeviceListNotification"
    AllowsTransparency="True"
    Closing="Window_Closing"
    FontFamily="{StaticResource InterFont}"
    GotKeyboardFocus="Window_GotKeyboardFocus"
    Loaded="Window_Loaded"
    LostKeyboardFocus="Window_LostKeyboardFocus"
    MouseDown="Window_MouseDown"
    MouseEnter="Window_MouseEnter"
    MouseLeave="Window_MouseLeave"
    ResizeMode="NoResize"
    ShowActivated="False"
    ShowInTaskbar="False"
    SizeToContent="WidthAndHeight"
    SnapsToDevicePixels="True"
    Topmost="True"
    WindowStartupLocation="Manual"
    WindowStyle="None"
    mc:Ignorable="d">
    <Window.Resources>
        <ResourceDictionary>
            <!--  Converters  -->
            <conv:ConverterChain x:Key="NullableToVisibilityConverter">
                <conv:NullToBooleanConverter />
                <conv:BooleanInverter />
                <BooleanToVisibilityConverter />
            </conv:ConverterChain>
            <conv:BooleanInverter x:Key="InvertConverter" />
            <conv:BoolToBrushConverter
                x:Key="SelectedItemBackgroundBrushConverter"
                WhenFalse="{x:Static core:Config.NotificationUnlockedBrush}"
                WhenTrue="{x:Static core:Config.NotificationLockedBrush}" />

            <!--  Styles  -->
            <Style TargetType="{x:Type ListView}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="#0000" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource CustomFocusVisualStyle}" />
            </Style>
            <Style TargetType="{x:Type ListViewItem}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                        <Setter Property="FontWeight" Value="Bold" />
                        <Setter Property="Background" Value="{Binding AudioAPI.AudioDeviceSelector.LockSelection, Source={StaticResource Settings}, Converter={StaticResource SelectedItemBackgroundBrushConverter}}" />
                    </DataTrigger>
                </Style.Triggers>
                <Setter Property="Foreground" Value="{StaticResource TextBoxForeground}" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Padding" Value="6,4" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                            <Border
                                Margin="{TemplateBinding Margin}"
                                Padding="{TemplateBinding Padding}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{StaticResource RoundedControlCorner}"
                                FocusVisualStyle="{TemplateBinding FocusVisualStyle}">
                                <ContentPresenter
                                    Content="{TemplateBinding Content}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <EventSetter Event="Selected" Handler="ListViewItem_Selected" />
            </Style>
            <Style BasedOn="{StaticResource CheckBoxStyle}" TargetType="{x:Type CheckBox}" />
            <Style BasedOn="{StaticResource TextBoxStyle}" TargetType="{x:Type TextBox}">
                <Setter Property="Background" Value="#0000" />
                <Setter Property="BorderThickness" Value="0" />
            </Style>

            <!--  Animation Storyboards  -->
            <Storyboard x:Key="FadeInStoryboard" Completed="FadeInStoryboard_Completed">
                <DoubleAnimation
                    FillBehavior="HoldEnd"
                    Storyboard.TargetProperty="Opacity"
                    From="0.0"
                    To="1.0"
                    Duration="{Binding DeviceListNotificationConfig.FadeInDuration, Source={StaticResource Settings}}" />
            </Storyboard>
            <Storyboard x:Key="FadeOutStoryboard" Completed="FadeOutStoryboard_Completed">
                <DoubleAnimation
                    FillBehavior="Stop"
                    Storyboard.TargetProperty="Opacity"
                    From="1.0"
                    To="0.0"
                    Duration="{Binding DeviceListNotificationConfig.FadeOutDuration, Source={StaticResource Settings}}" />
            </Storyboard>

        </ResourceDictionary>
    </Window.Resources>
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="Background" Value="{StaticResource NotificationBackgroundBrush}" />
        </Style>
    </Window.Style>

    <Border BorderThickness="10">
        <Border.Style>
            <Style TargetType="{x:Type Border}">
                <Style.Triggers>
                    <DataTrigger Binding="{Binding AudioAPI.AudioDeviceSelector.Selected, Source={StaticResource Settings}, Converter={StaticResource IsNullConverter}}" Value="True">
                        <Setter Property="BorderBrush" Value="{Binding AudioAPI.AudioDeviceSelector.LockSelection, Source={StaticResource Settings}, Converter={StaticResource SelectedItemBackgroundBrushConverter}}" />
                    </DataTrigger>
                </Style.Triggers>
                <Setter Property="BorderBrush" Value="{StaticResource WindowBorderBrush}" />
            </Style>
        </Border.Style>
        <Grid DataContext="{StaticResource Settings}">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <!--  Row 0 (ListView)  -->
            <ListView
                x:Name="ListView"
                Margin="6"
                Padding="1"
                ItemsSource="{Binding AudioAPI.Devices, Mode=OneWay}"
                PreviewMouseDown="ListView_PreviewMouseDown"
                SelectedIndex="{Binding AudioAPI.AudioDeviceSelector.SelectedIndex, UpdateSourceTrigger=PropertyChanged}"
                SelectionMode="Single">
                <i:Interaction.Behaviors>
                    <wpfBehaviors:MouseWheelListViewBehavior />
                </i:Interaction.Behaviors>
                <ListView.ItemTemplate>
                    <DataTemplate DataType="{x:Type vm:AudioDeviceVM}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Image
                                Width="{Binding Height, RelativeSource={RelativeSource Self}, Mode=OneWay}"
                                Height="{Binding ActualHeight, ElementName=deviceNameBox}"
                                Margin="0,0,3,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Source="{Binding Icon}"
                                Visibility="{Binding ShowIcons, Source={StaticResource Settings}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                            <TextBlock
                                x:Name="deviceNameBox"
                                Grid.Column="1"
                                Margin="3,0,0,0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Center"
                                Text="{Binding Name}" />
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>

            <!--  Row 1 (Controls)  -->
            <Grid Grid.Row="2" Visibility="{Binding AudioAPI.AudioDeviceSelector.Selected, Mode=OneWay, Converter={StaticResource NullableToVisibilityConverter}}">
                <Border Background="{StaticResource WindowBorderBrush}" />
                <Grid Margin="2,4,2,2" DataContext="{Binding AudioAPI.AudioDeviceSelector.Selected}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition MinWidth="80" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <CheckBox
                        Grid.Column="0"
                        Margin="0,0,3,0"
                        VerticalAlignment="Center"
                        IsChecked="{Binding Mute, UpdateSourceTrigger=PropertyChanged}" />
                    <Slider
                        Grid.Column="1"
                        Margin="3,0"
                        VerticalAlignment="Center"
                        LargeChange="5"
                        Maximum="100"
                        Minimum="0"
                        SmallChange="1"
                        Tag="{Binding PeakMeterValue, Mode=OneWay}"
                        Value="{Binding Volume, UpdateSourceTrigger=PropertyChanged}">
                        <i:Interaction.Behaviors>
                            <wpfBehaviors:MouseWheelRangeBaseBehavior Amount="{Binding VolumeStepSize, Source={StaticResource Settings}}" />
                            <behaviour:IntervalUpdateBinding
                                EnableTimer="{Binding ShowPeakMeters, Source={StaticResource Settings}}"
                                Interval="{Binding PeakMeterUpdateIntervalMs, Source={StaticResource Settings}}"
                                Property="{x:Static FrameworkElement.TagProperty}" />
                        </i:Interaction.Behaviors>
                    </Slider>
                    <TextBox
                        Grid.Column="2"
                        MinWidth="30"
                        Margin="3,0,0,0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Center"
                        Text="{Binding Volume, UpdateSourceTrigger=LostFocus}">
                        <i:Interaction.Behaviors>
                            <wpfBehaviors:EscapeRemovesFocusBehavior />
                        </i:Interaction.Behaviors>
                    </TextBox>
                </Grid>
            </Grid>
        </Grid>
    </Border>

    <WindowChrome.WindowChrome>
        <WindowChrome
            CaptionHeight="0"
            CornerRadius="{StaticResource RoundedWindowCorner}"
            GlassFrameThickness="0" />
    </WindowChrome.WindowChrome>
</Window>
