# This is a heavily modified version of my GenerateRelease.yml script for C++, written for building windows-only C# applications using .NET
name: Generate Release

on:
  workflow_run:
    workflows:
      - 'Update Version'
    types:
      - 'completed'

defaults:
  run:
    shell:  |
            pwsh -noninteractive -command "try {{ $ErrorActionPreference='Stop'; . '{0}' }} catch {{ Write-Error ""FAILED: $_""; throw; }} if ((Test-Path -LiteralPath variable:\LASTEXITCODE)) {{ exit $LASTEXITCODE }}"

# Configuration Type
env:
  BUILD_TYPE: 'Release'

jobs:
  build-release: # Only run on successful version update action
    runs-on:  windows-2022
    if:       ${{ github.event.workflow_run.conclusion == 'success' }}
    env:
      DOTNET_NOLOGO:                true
      DOTNET_CLI_TELEMETRY_OPTOUT:  true

    steps:
    - uses: actions/checkout@v3
      with:
        ref:          '${{ github.ref }}'
        fetch-depth:  0
    # Setup dependencies
    - uses: actions/setup-dotnet@main
      with:
        dotnet-version: 6.0.x

    - name:   Change Directory
      run:    cd "${{github.workspace}}"

    - name:   Stage Update Utility
      run:    |
              gh auth login
              gh release download -R https://github.com/radj307/VolumeControl.UpdateUtility -p "*.exe" -D "${{github.workspace}}/Resources/"
      env:
        GH_TOKEN: $
       #^^^^^^^^^^^ From here: https://cli.github.com/manual/gh_auth_login

    - name:   Build VolumeControl Binary
      run:    dotnet publish VolumeControl -c ${{env.BUILD_TYPE}} /p:PublishProfile="VolumeControl/Properties/PublishProfiles/FolderProfile.pubxml"
      env:
        VCUpdateUtilityResource: ${{github.workspace}}/VolumeControl/Resources/VCUpdateUtility.exe

    - name:   Create Staging Directory
      run:    mkdir "STAGING"

    - name:   Stage Files
      run:    foreach($file in $((dir "publish" -recurse | where {$_.extension -in ".exe"}).Fullname)){ mv "$file" "STAGING" }

    - name:   Upload Executable Artifact
      uses:   actions/upload-artifact@v2
      with:
        name: build-windows
        path: '${{github.workspace}}/STAGING/*'
        if-no-files-found: error

    - name:   Upload SDK Artifact
      uses:   actions/upload-artifact@v2
      with:
        name: sdk
        path: '${{github.workspace}}/publish/SDK/*'
        if-no-files-found: error

  # Create the release using the uploaded artifact on github:
  create-release:
    needs:    build-release
    runs-on:  ubuntu-latest

    steps:
    - name: Download Artifacts
      uses: actions/download-artifact@v3
      with:
        path:  ${{github.workspace}}
        
    - name: Stage Artifacts
      run:  |
            cd ${{github.workspace}}
            zip -T9 SDK.zip sdk/*

    - run:  ls -lAghR

    - name: 'Create Release'
      uses: softprops/action-gh-release@v1
      with:
        draft:                    true
        fail_on_unmatched_files:  true
        files:      |
                    ${{github.workspace}}/build-windows/VolumeControl.exe
                    ${{github.workspace}}/SDK.zip
                    
