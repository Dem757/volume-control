<Window
    x:Class="VolumeControl.ListNotification"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:conv="clr-namespace:VolumeControl.WPF.Converters;assembly=VolumeControl.WPF"
    xmlns:coreEnum="clr-namespace:VolumeControl.Core.Enum;assembly=VolumeControl.Core"
    xmlns:coreInterfaces="clr-namespace:VolumeControl.Core.Interfaces;assembly=VolumeControl.Core"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:svg="https://github.com/dotnetprojects/SVGImage"
    xmlns:sys="clr-namespace:System.Windows;assembly=PresentationFramework"
    xmlns:tempViewModels="clr-namespace:VolumeControl.ViewModels"
    x:Name="lnotifWindow"
    Title="ListNotification"
    SizeChanged="lnotifWindow_SizeChanged"
    AllowsTransparency="True"
    Closing="lnotifWindow_Closing"
    DataContext="{RelativeSource Self}"
    Focusable="False"
    LocationChanged="lnotifWindow_LocationChanged"
    MouseDown="lnotifWindow_MouseDown"
    ResizeMode="NoResize"
    ShowActivated="False"
    ShowInTaskbar="False"
    SizeToContent="WidthAndHeight"
    Topmost="True"
    WindowStartupLocation="Manual"
    WindowStyle="None"
    mc:Ignorable="d">
    <Window.Resources>
        <ResourceDictionary>
            <!--  Expander Style  -->
            <Style BasedOn="{StaticResource ExpanderStyle}" TargetType="{x:Type Expander}" />
            <!--  ListView style  -->
            <Style x:Key="ListViewStyle" TargetType="{x:Type ListView}">
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="Background" Value="#0000" />
                <Setter Property="FocusVisualStyle" Value="{StaticResource CustomFocusVisualStyle}" />
            </Style>
            <!--  CheckBox style provider  -->
            <Style BasedOn="{StaticResource CheckBoxStyle}" TargetType="{x:Type CheckBox}" />
            <!--  TextBox style provider  -->
            <Style BasedOn="{StaticResource TextBoxStyle}" TargetType="{x:Type TextBox}" />

            <SolidColorBrush
                x:Key="panelBrush"
                Opacity="0.75"
                Color="{StaticResource WindowBackgroundColor}" />
        </ResourceDictionary>
    </Window.Resources>
    <Window.Style>
        <Style TargetType="Window">
            <Setter Property="Background" Value="{Binding ListNotificationVM.Background, Source={StaticResource Settings}, Mode=OneWay}" />
        </Style>
    </Window.Style>

    <StackPanel Margin="14" Orientation="Vertical">

        <!--  Outer Layout Grid Control  -->
        <Grid>
            <Border
                x:Name="listViewMask"
                Background="{StaticResource panelBrush}"
                Style="{StaticResource RoundBorderMaskStyle}" />
            <ListView
                Name="listView"
                Background="{StaticResource panelBrush}"
                Focusable="{Binding ListNotificationVM.LockSelection, Source={StaticResource Settings}, Mode=OneWay, Converter={StaticResource InvertConverter}}"
                ItemsSource="{Binding ListNotificationVM.ItemsSource, Source={StaticResource Settings}, Mode=OneWay}"
                MouseDown="lnotifWindow_MouseDown"
                PreviewMouseDown="listView_PreviewMouseDown"
                SelectedItem="{Binding ListNotificationVM.SelectedItem, Source={StaticResource Settings}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                Style="{StaticResource ListViewStyle}">
                <ListView.ItemContainerStyle>
                    <!--  ListViewItem style  -->
                    <Style TargetType="{x:Type ListViewItem}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True">
                                <Setter Property="Background" Value="{Binding ListNotificationVM.Background, Source={StaticResource Settings}, Mode=OneWay}" />
                                <Setter Property="FontWeight" Value="Bold" />
                            </DataTrigger>
                        </Style.Triggers>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <EventSetter Event="MouseDown" Handler="lnotifWindow_MouseDown" />
                        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                        <Setter Property="Focusable" Value="{Binding ListNotificationVM.LockSelection, Source={StaticResource Settings}, Mode=OneWay, Converter={StaticResource InvertConverter}}" />
                        <Setter Property="Padding" Value="3,1" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Border
                                        Padding="{TemplateBinding Padding}"
                                        Background="{TemplateBinding Background}"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        FocusVisualStyle="{TemplateBinding FocusVisualStyle}">
                                        <ContentPresenter
                                            Content="{TemplateBinding Content}"
                                            ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.OpacityMask>
                    <VisualBrush Visual="{Binding ElementName=listViewMask}" />
                </ListView.OpacityMask>
                <ListView.ItemTemplate>
                    <DataTemplate DataType="{x:Type coreInterfaces:IListDisplayable}">
                        <Grid Margin="3,1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!--  DisplayIcon  -->
                            <Image
                                Grid.Column="0"
                                Width="{Binding Height, RelativeSource={RelativeSource Self}}"
                                Margin="2,1,5,2"
                                HorizontalAlignment="Left"
                                Source="{Binding DisplayIcon}"
                                Visibility="{Binding ShowIcons, Source={StaticResource Settings}, Converter={StaticResource BooleanToVisibilityConverter}}" />

                            <!--  DisplayText  -->
                            <TextBlock
                                Grid.Column="1"
                                Margin="5,3"
                                HorizontalAlignment="Stretch"
                                Style="{StaticResource TextBlockStyle}"
                                Text="{Binding DisplayText}" />

                            <!--  DisplayControls  -->
                            <StackPanel
                                Name="displayableControlsTemplate"
                                Grid.Column="2"
                                HorizontalAlignment="Right"
                                Loaded="displayableControlsTemplate_Loaded"
                                Orientation="Horizontal"
                                Tag="{Binding DisplayControls}"
                                Unloaded="displayableControlsTemplate_Unloaded"
                                Visibility="{Binding NotificationShowsCustomControls, Source={StaticResource Settings}, Converter={StaticResource BooleanToVisibilityConverter}}" />
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </Grid>
        <!--  Options Expander  -->
        <Expander
            x:Name="displayTargetExpander"
            Grid.Row="1"
            Header="{Tr 'VolumeControl.ListNotification.Options.Header',
                        DefaultText='Options'}">
            <Grid Margin="0,2,0,0">
                <Border
                    Name="expanderPanelMask"
                    Background="{StaticResource panelBrush}"
                    Style="{StaticResource RoundBorderMaskStyle}" />
                <WrapPanel MaxWidth="{Binding ActualWidth, ElementName=listView}" Background="{StaticResource panelBrush}">
                    <WrapPanel.OpacityMask>
                        <VisualBrush Visual="{Binding ElementName=expanderPanelMask}" />
                    </WrapPanel.OpacityMask>
                    <CheckBox
                        Margin="5,3"
                        Content="{Tr 'VolumeControl.ListNotification.Options.ShowControls.Content',
                                     DefaultText='Show Controls'}"
                        IsChecked="{Binding NotificationShowsCustomControls, Source={StaticResource Settings}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        ToolTip="{Tr 'VolumeControl.ListNotification.Options.ShowControls.Tooltip',
                                     DefaultText='Toggles the visibility of advanced controls next to list items.'}" />
                    <CheckBox
                        Margin="5,3"
                        Content="{Tr 'VolumeControl.ListNotification.Options.DragRequiresAlt.Content',
                                     DefaultText='Drag Requires Alt'}"
                        IsChecked="{Binding NotificationDragRequiresAlt, Source={StaticResource Settings}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        ToolTip="{Tr 'VolumeControl.ListNotification.Options.DragRequiresAlt.Tooltip',
                                     DefaultText='When checked, the ALT key must be held down in order to drag the notification window around with the mouse.'}" />
                </WrapPanel>
            </Grid>
        </Expander>
    </StackPanel>

    <WindowChrome.WindowChrome>
        <WindowChrome
            CaptionHeight="0"
            CornerRadius="{StaticResource RoundedWindowCorner}"
            GlassFrameThickness="0" />
    </WindowChrome.WindowChrome>
</Window>
